<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sale.xiao.mapper.StaffMapper">
	<!-- 替代，语句中的内容,简写 -->
	<sql id="cols">
		id,name,sex,pwd,tel,introduce      
    </sql>
    
    <sql id="col">
  	  name,sex,tel,introduce
    </sql>
	<!-- 查询所有记录 -->
	<select id="GetStaffList" 
		resultType="sale.xiao.entity.StaffEntity">
		select
		<include refid="cols" />
		from staff
	</select>

	<!-- 查询一个用户 -->                            <!-- 别名替代，简写 -->
	<select id="getOne" parameterType="string" resultType="sale.xiao.entity.StaffEntity">
		select
		<include refid="cols" />
		from user where id= #{id}
	</select>

	<!-- 查询一个用户 -->                            <!-- 别名替代，简写 -->
	<select id="getOneUser" parameterType="int" resultType="hashmap">
		select
		<include refid="cols" />
		from user where id= #{id}
	</select>

	<!-- 插入一个用户 -->
	<insert id="AddStaff" parameterType="sale.xiao.entity.StaffEntity" keyProperty="id">
		insert into staff(
		<include refid="col" />
		) values (#{staff.name},#{staff.sex},#{staff.tel},#{staff.introduce})
	</insert>
	
	
	
	<!-- 更新一个用户 -->
	<insert id="updateOne" parameterType="sale.xiao.entity.StaffEntity">
		update user set name=#{name},age=#{age},address=#{address} where
		id=#{id}    
    </insert>
	<!-- 删除一个用户 -->
	<update id="deleteOne" parameterType="sale.xiao.entity.StaffEntity">
		delete from user where id= #{id}   
    </update>
    
	 <resultMap type="sale.xiao.entity.StaffEntity" id="staff_product">
	    	<id property="id" column="id"/>
	    	<id property="name" column="name"/>
	    	<id property="sex" column="sex"/>
	    	<id property="pwd" column="pwd"/>
	    	<id property="tel" column="tel"/>
	    	<id property="introduce" column="introduce"/>
	    	<collection property="products" column="staffId" ofType="sale.xiao.entity.ProductEntity">
	    		<id property="id" column="id" javaType="int" jdbcType="INTEGER"/>
	    		<result property="product_name" column="product_name"/>
		    	<result property="factory_price" column="factory_price"/>
		    	<result property="sell_price" column="sell_price"/>
		    	<result property="total_amount" column="total_amount"/>
		    	<result property="group_amount" column="amount"/>
		    	<result property="introduction" column="introduction"/>
		    	<result property="image_url" column="image_url"/>
	    	</collection>
	    </resultMap>
    
	<select id="GetPerformanceByStaffId" resultMap="staff_product"
		parameterType="int">
		select
		staff.name,staff.introduce,staff.sex,staff.tel,product.product_name,product.sell_price,COUNT(product_staff.productid )as amount
		from staff inner join product_staff ON staff.id =
		product_staff.staffid INNER join product ON product_staff.productid =
		product.id WHERE staff.id = #{id} GROUP BY product_staff.productid 
    </select>
</mapper>
